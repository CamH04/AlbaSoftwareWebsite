{"ast":null,"code":"/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value);\n  let index = source.indexOf(substring);\n  let expected = index;\n  let count = 0;\n  let max = 0;\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring');\n  }\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count;\n      }\n    } else {\n      count = 1;\n    }\n    expected = index + substring.length;\n    index = source.indexOf(substring, expected);\n  }\n  return max;\n}","map":{"version":3,"names":["longestStreak","value","substring","source","String","index","indexOf","expected","count","max","TypeError","length"],"sources":["/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/node_modules/longest-streak/index.js"],"sourcesContent":["/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAaA,CAACC,KAAK,EAAEC,SAAS,EAAE;EAC9C,MAAMC,MAAM,GAAGC,MAAM,CAACH,KAAK,CAAC;EAC5B,IAAII,KAAK,GAAGF,MAAM,CAACG,OAAO,CAACJ,SAAS,CAAC;EACrC,IAAIK,QAAQ,GAAGF,KAAK;EACpB,IAAIG,KAAK,GAAG,CAAC;EACb,IAAIC,GAAG,GAAG,CAAC;EAEX,IAAI,OAAOP,SAAS,KAAK,QAAQ,EAAE;IACjC,MAAM,IAAIQ,SAAS,CAAC,oBAAoB,CAAC;EAC3C;EAEA,OAAOL,KAAK,KAAK,CAAC,CAAC,EAAE;IACnB,IAAIA,KAAK,KAAKE,QAAQ,EAAE;MACtB,IAAI,EAAEC,KAAK,GAAGC,GAAG,EAAE;QACjBA,GAAG,GAAGD,KAAK;MACb;IACF,CAAC,MAAM;MACLA,KAAK,GAAG,CAAC;IACX;IAEAD,QAAQ,GAAGF,KAAK,GAAGH,SAAS,CAACS,MAAM;IACnCN,KAAK,GAAGF,MAAM,CAACG,OAAO,CAACJ,SAAS,EAAEK,QAAQ,CAAC;EAC7C;EAEA,OAAOE,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}