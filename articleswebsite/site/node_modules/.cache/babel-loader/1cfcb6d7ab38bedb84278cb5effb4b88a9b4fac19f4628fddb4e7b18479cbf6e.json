{"ast":null,"code":"/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport { convert } from 'unist-util-is';\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > ðŸ‘‰ **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing = /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n\nconvert(['break', 'delete', 'emphasis',\n// To do: next major: removed since footnotes were added to GFM.\n'footnote', 'footnoteReference', 'image', 'imageReference', 'inlineCode',\n// Enabled by `mdast-util-math`:\n'inlineMath', 'link', 'linkReference',\n// Enabled by `mdast-util-mdx`:\n'mdxJsxTextElement',\n// Enabled by `mdast-util-mdx`:\n'mdxTextExpression', 'strong', 'text',\n// Enabled by `mdast-util-directive`:\n'textDirective']);","map":{"version":3,"names":["convert","phrasing"],"sources":["/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/node_modules/mdast-util-phrasing/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > ðŸ‘‰ **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAAQA,OAAO,QAAO,eAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GACnB;;AAEED,OAAO,CAAC,CACN,OAAO,EACP,QAAQ,EACR,UAAU;AACV;AACA,UAAU,EACV,mBAAmB,EACnB,OAAO,EACP,gBAAgB,EAChB,YAAY;AACZ;AACA,YAAY,EACZ,MAAM,EACN,eAAe;AACf;AACA,mBAAmB;AACnB;AACA,mBAAmB,EACnB,QAAQ,EACR,MAAM;AACN;AACA,eAAe,CAChB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}