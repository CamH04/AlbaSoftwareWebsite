{"ast":null,"code":"/**\n * @import {Join} from 'mdast-util-to-markdown'\n */\n\nimport { formatCodeAsIndented } from './util/format-code-as-indented.js';\nimport { formatHeadingAsSetext } from './util/format-heading-as-setext.js';\n\n/** @type {Array<Join>} */\nexport const join = [joinDefaults];\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, state) {\n  // Indented code after list or another indented code.\n  if (right.type === 'code' && formatCodeAsIndented(right, state) && (left.type === 'list' || left.type === right.type && formatCodeAsIndented(left, state))) {\n    return false;\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (left.type === 'paragraph' && (\n    // Two paragraphs.\n    left.type === right.type || right.type === 'definition' ||\n    // Paragraph followed by a setext heading.\n    right.type === 'heading' && formatHeadingAsSetext(right, state))) {\n      return;\n    }\n    return parent.spread ? 1 : 0;\n  }\n}","map":{"version":3,"names":["formatCodeAsIndented","formatHeadingAsSetext","join","joinDefaults","left","right","parent","state","type","spread"],"sources":["/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/node_modules/mdast-util-to-markdown/lib/join.js"],"sourcesContent":["/**\n * @import {Join} from 'mdast-util-to-markdown'\n */\n\nimport {formatCodeAsIndented} from './util/format-code-as-indented.js'\nimport {formatHeadingAsSetext} from './util/format-heading-as-setext.js'\n\n/** @type {Array<Join>} */\nexport const join = [joinDefaults]\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, state) {\n  // Indented code after list or another indented code.\n  if (\n    right.type === 'code' &&\n    formatCodeAsIndented(right, state) &&\n    (left.type === 'list' ||\n      (left.type === right.type && formatCodeAsIndented(left, state)))\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, state)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAAQA,oBAAoB,QAAO,mCAAmC;AACtE,SAAQC,qBAAqB,QAAO,oCAAoC;;AAExE;AACA,OAAO,MAAMC,IAAI,GAAG,CAACC,YAAY,CAAC;;AAElC;AACA,SAASA,YAAYA,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAE;EAChD;EACA,IACEF,KAAK,CAACG,IAAI,KAAK,MAAM,IACrBR,oBAAoB,CAACK,KAAK,EAAEE,KAAK,CAAC,KACjCH,IAAI,CAACI,IAAI,KAAK,MAAM,IAClBJ,IAAI,CAACI,IAAI,KAAKH,KAAK,CAACG,IAAI,IAAIR,oBAAoB,CAACI,IAAI,EAAEG,KAAK,CAAE,CAAC,EAClE;IACA,OAAO,KAAK;EACd;;EAEA;EACA;EACA,IAAI,QAAQ,IAAID,MAAM,IAAI,OAAOA,MAAM,CAACG,MAAM,KAAK,SAAS,EAAE;IAC5D,IACEL,IAAI,CAACI,IAAI,KAAK,WAAW;IACzB;IACCJ,IAAI,CAACI,IAAI,KAAKH,KAAK,CAACG,IAAI,IACvBH,KAAK,CAACG,IAAI,KAAK,YAAY;IAC3B;IACCH,KAAK,CAACG,IAAI,KAAK,SAAS,IAAIP,qBAAqB,CAACI,KAAK,EAAEE,KAAK,CAAE,CAAC,EACpE;MACA;IACF;IAEA,OAAOD,MAAM,CAACG,MAAM,GAAG,CAAC,GAAG,CAAC;EAC9B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}