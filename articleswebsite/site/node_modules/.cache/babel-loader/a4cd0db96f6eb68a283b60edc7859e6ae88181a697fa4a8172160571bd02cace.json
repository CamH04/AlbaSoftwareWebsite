{"ast":null,"code":"/**\n * @import {Comment, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport { stringifyEntities } from 'stringify-entities';\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g;\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>'];\nconst commentEntitySubset = ['<', '>'];\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments ? '<?' + stringifyEntities(node.value, Object.assign({}, state.settings.characterReferences, {\n    subset: bogusCommentEntitySubset\n  })) + '>' : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->';\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities($0, Object.assign({}, state.settings.characterReferences, {\n      subset: commentEntitySubset\n    }));\n  }\n}","map":{"version":3,"names":["stringifyEntities","htmlCommentRegex","bogusCommentEntitySubset","commentEntitySubset","comment","node","_1","_2","state","settings","bogusComments","value","Object","assign","characterReferences","subset","replace","encode","$0"],"sources":["/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/node_modules/hast-util-to-html/lib/handle/comment.js"],"sourcesContent":["/**\n * @import {Comment, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>']\nconst commentEntitySubset = ['<', '>']\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAAQA,iBAAiB,QAAO,oBAAoB;AAEpD,MAAMC,gBAAgB,GAAG,4BAA4B;;AAErD;AACA,MAAMC,wBAAwB,GAAG,CAAC,GAAG,CAAC;AACtC,MAAMC,mBAAmB,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CAACC,IAAI,EAAEC,EAAE,EAAEC,EAAE,EAAEC,KAAK,EAAE;EAC3C;EACA,OAAOA,KAAK,CAACC,QAAQ,CAACC,aAAa,GAC/B,IAAI,GACFV,iBAAiB,CACfK,IAAI,CAACM,KAAK,EACVC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACC,QAAQ,CAACK,mBAAmB,EAAE;IACpDC,MAAM,EAAEb;EACV,CAAC,CACH,CAAC,GACD,GAAG,GACL,MAAM,GAAGG,IAAI,CAACM,KAAK,CAACK,OAAO,CAACf,gBAAgB,EAAEgB,MAAM,CAAC,GAAG,KAAK;;EAEjE;AACF;AACA;EACE,SAASA,MAAMA,CAACC,EAAE,EAAE;IAClB,OAAOlB,iBAAiB,CACtBkB,EAAE,EACFN,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACC,QAAQ,CAACK,mBAAmB,EAAE;MACpDC,MAAM,EAAEZ;IACV,CAAC,CACH,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}