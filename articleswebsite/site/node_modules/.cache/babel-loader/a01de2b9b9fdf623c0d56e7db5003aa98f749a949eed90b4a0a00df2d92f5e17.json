{"ast":null,"code":"/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport { checkEmphasis } from '../util/check-emphasis.js';\nimport { encodeCharacterReference } from '../util/encode-character-reference.js';\nimport { encodeInfo } from '../util/encode-info.js';\nemphasis.peek = emphasisPeek;\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state);\n  const exit = state.enter('emphasis');\n  const tracker = state.createTracker(info);\n  const before = tracker.move(marker);\n  let between = tracker.move(state.containerPhrasing(node, {\n    after: marker,\n    before,\n    ...tracker.current()\n  }));\n  const betweenHead = between.charCodeAt(0);\n  const open = encodeInfo(info.before.charCodeAt(info.before.length - 1), betweenHead, marker);\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1);\n  }\n  const betweenTail = between.charCodeAt(between.length - 1);\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker);\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail);\n  }\n  const after = tracker.move(marker);\n  exit();\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  };\n  return before + between + after;\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*';\n}","map":{"version":3,"names":["checkEmphasis","encodeCharacterReference","encodeInfo","emphasis","peek","emphasisPeek","node","_","state","info","marker","exit","enter","tracker","createTracker","before","move","between","containerPhrasing","after","current","betweenHead","charCodeAt","open","length","inside","slice","betweenTail","close","attentionEncodeSurroundingInfo","outside","_1","options"],"sources":["/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAAQA,aAAa,QAAO,2BAA2B;AACvD,SAAQC,wBAAwB,QAAO,uCAAuC;AAC9E,SAAQC,UAAU,QAAO,wBAAwB;AAEjDC,QAAQ,CAACC,IAAI,GAAGC,YAAY;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASF,QAAQA,CAACG,IAAI,EAAEC,CAAC,EAAEC,KAAK,EAAEC,IAAI,EAAE;EAC7C,MAAMC,MAAM,GAAGV,aAAa,CAACQ,KAAK,CAAC;EACnC,MAAMG,IAAI,GAAGH,KAAK,CAACI,KAAK,CAAC,UAAU,CAAC;EACpC,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAa,CAACL,IAAI,CAAC;EACzC,MAAMM,MAAM,GAAGF,OAAO,CAACG,IAAI,CAACN,MAAM,CAAC;EAEnC,IAAIO,OAAO,GAAGJ,OAAO,CAACG,IAAI,CACxBR,KAAK,CAACU,iBAAiB,CAACZ,IAAI,EAAE;IAC5Ba,KAAK,EAAET,MAAM;IACbK,MAAM;IACN,GAAGF,OAAO,CAACO,OAAO,CAAC;EACrB,CAAC,CACH,CAAC;EACD,MAAMC,WAAW,GAAGJ,OAAO,CAACK,UAAU,CAAC,CAAC,CAAC;EACzC,MAAMC,IAAI,GAAGrB,UAAU,CACrBO,IAAI,CAACM,MAAM,CAACO,UAAU,CAACb,IAAI,CAACM,MAAM,CAACS,MAAM,GAAG,CAAC,CAAC,EAC9CH,WAAW,EACXX,MACF,CAAC;EAED,IAAIa,IAAI,CAACE,MAAM,EAAE;IACfR,OAAO,GAAGhB,wBAAwB,CAACoB,WAAW,CAAC,GAAGJ,OAAO,CAACS,KAAK,CAAC,CAAC,CAAC;EACpE;EAEA,MAAMC,WAAW,GAAGV,OAAO,CAACK,UAAU,CAACL,OAAO,CAACO,MAAM,GAAG,CAAC,CAAC;EAC1D,MAAMI,KAAK,GAAG1B,UAAU,CAACO,IAAI,CAACU,KAAK,CAACG,UAAU,CAAC,CAAC,CAAC,EAAEK,WAAW,EAAEjB,MAAM,CAAC;EAEvE,IAAIkB,KAAK,CAACH,MAAM,EAAE;IAChBR,OAAO,GAAGA,OAAO,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGzB,wBAAwB,CAAC0B,WAAW,CAAC;EACxE;EAEA,MAAMR,KAAK,GAAGN,OAAO,CAACG,IAAI,CAACN,MAAM,CAAC;EAElCC,IAAI,CAAC,CAAC;EAENH,KAAK,CAACqB,8BAA8B,GAAG;IACrCV,KAAK,EAAES,KAAK,CAACE,OAAO;IACpBf,MAAM,EAAEQ,IAAI,CAACO;EACf,CAAC;EACD,OAAOf,MAAM,GAAGE,OAAO,GAAGE,KAAK;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASd,YAAYA,CAACE,CAAC,EAAEwB,EAAE,EAAEvB,KAAK,EAAE;EAClC,OAAOA,KAAK,CAACwB,OAAO,CAAC7B,QAAQ,IAAI,GAAG;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}