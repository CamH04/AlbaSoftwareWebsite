{"ast":null,"code":"const decimalRegex = /\\d/;\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code);\n  return omit && next && !decimalRegex.test(String.fromCharCode(next)) ? value : value + ';';\n}","map":{"version":3,"names":["decimalRegex","toDecimal","code","next","omit","value","String","test","fromCharCode"],"sources":["/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/node_modules/stringify-entities/lib/util/to-decimal.js"],"sourcesContent":["const decimalRegex = /\\d/\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !decimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,IAAI;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1C,MAAMC,KAAK,GAAG,IAAI,GAAGC,MAAM,CAACJ,IAAI,CAAC;EACjC,OAAOE,IAAI,IAAID,IAAI,IAAI,CAACH,YAAY,CAACO,IAAI,CAACD,MAAM,CAACE,YAAY,CAACL,IAAI,CAAC,CAAC,GAChEE,KAAK,GACLA,KAAK,GAAG,GAAG;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}