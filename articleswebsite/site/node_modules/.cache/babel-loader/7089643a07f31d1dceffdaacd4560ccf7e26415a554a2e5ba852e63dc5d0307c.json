{"ast":null,"code":"var _jsxFileName = \"/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/src/components/MarkdownArticle.js\",\n  _s = $RefreshSig$();\n// src/components/MarkdownArticle.js\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\n// Fetch and render markdown files\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkdownArticle = ({\n  articlePath\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    // Fetch markdown file from public folder\n    const loadMarkdown = async () => {\n      try {\n        const response = await fetch(`/articles/${articlePath}`);\n        const text = await response.text();\n        setContent(text);\n      } catch (err) {\n        console.error('Error loading markdown file:', err);\n      }\n    };\n    loadMarkdown();\n  }, [articlePath]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"article-content\",\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(MarkdownArticle, \"wipnac41BTB3eHT+ORLT1pgXER0=\");\n_c = MarkdownArticle;\nexport default MarkdownArticle;\nvar _c;\n$RefreshReg$(_c, \"MarkdownArticle\");","map":{"version":3,"names":["React","useEffect","useState","ReactMarkdown","jsxDEV","_jsxDEV","MarkdownArticle","articlePath","_s","content","setContent","loadMarkdown","response","fetch","text","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/src/components/MarkdownArticle.js"],"sourcesContent":["// src/components/MarkdownArticle.js\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\n// Fetch and render markdown files\nconst MarkdownArticle = ({ articlePath }) => {\n  const [content, setContent] = useState('');\n\n  useEffect(() => {\n    // Fetch markdown file from public folder\n    const loadMarkdown = async () => {\n      try {\n        const response = await fetch(`/articles/${articlePath}`);\n        const text = await response.text();\n        setContent(text);\n      } catch (err) {\n        console.error('Error loading markdown file:', err);\n      }\n    };\n\n    loadMarkdown();\n  }, [articlePath]);\n\n  return (\n    <div className=\"article-content\">\n      <ReactMarkdown children={content} />\n    </div>\n  );\n};\n\nexport default MarkdownArticle;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,gBAAgB;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAaN,WAAW,EAAE,CAAC;QACxD,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCJ,UAAU,CAACI,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,GAAG,CAAC;MACpD;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,oBACEF,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9Bd,OAAA,CAACF,aAAa;MAACgB,QAAQ,EAAEV;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACf,EAAA,CAvBIF,eAAe;AAAAkB,EAAA,GAAflB,eAAe;AAyBrB,eAAeA,eAAe;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}