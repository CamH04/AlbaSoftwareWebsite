{"ast":null,"code":"/**\n * @import {Options, State} from './types.js'\n */\n\nconst own = {}.hasOwnProperty;\n\n/**\n * @param {State} base\n * @param {Options} extension\n * @returns {State}\n */\nexport function configure(base, extension) {\n  let index = -1;\n  /** @type {keyof Options} */\n  let key;\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index]);\n    }\n  }\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'extensions':\n          {\n            // Empty.\n            break;\n          }\n\n        /* c8 ignore next 4 */\n        case 'unsafe':\n          {\n            list(base[key], extension[key]);\n            break;\n          }\n        case 'join':\n          {\n            list(base[key], extension[key]);\n            break;\n          }\n        case 'handlers':\n          {\n            map(base[key], extension[key]);\n            break;\n          }\n        default:\n          {\n            // @ts-expect-error: matches.\n            base.options[key] = extension[key];\n          }\n      }\n    }\n  }\n  return base;\n}\n\n/**\n * @template T\n * @param {Array<T>} left\n * @param {Array<T> | null | undefined} right\n */\nfunction list(left, right) {\n  if (right) {\n    left.push(...right);\n  }\n}\n\n/**\n * @template T\n * @param {Record<string, T>} left\n * @param {Record<string, T> | null | undefined} right\n */\nfunction map(left, right) {\n  if (right) {\n    Object.assign(left, right);\n  }\n}","map":{"version":3,"names":["own","hasOwnProperty","configure","base","extension","index","key","extensions","length","call","list","map","options","left","right","push","Object","assign"],"sources":["/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/node_modules/mdast-util-to-markdown/lib/configure.js"],"sourcesContent":["/**\n * @import {Options, State} from './types.js'\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {State} base\n * @param {Options} extension\n * @returns {State}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {keyof Options} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'extensions': {\n          // Empty.\n          break\n        }\n\n        /* c8 ignore next 4 */\n        case 'unsafe': {\n          list(base[key], extension[key])\n          break\n        }\n\n        case 'join': {\n          list(base[key], extension[key])\n          break\n        }\n\n        case 'handlers': {\n          map(base[key], extension[key])\n          break\n        }\n\n        default: {\n          // @ts-expect-error: matches.\n          base.options[key] = extension[key]\n        }\n      }\n    }\n  }\n\n  return base\n}\n\n/**\n * @template T\n * @param {Array<T>} left\n * @param {Array<T> | null | undefined} right\n */\nfunction list(left, right) {\n  if (right) {\n    left.push(...right)\n  }\n}\n\n/**\n * @template T\n * @param {Record<string, T>} left\n * @param {Record<string, T> | null | undefined} right\n */\nfunction map(left, right) {\n  if (right) {\n    Object.assign(left, right)\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA,MAAMA,GAAG,GAAG,CAAC,CAAC,CAACC,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,IAAI,EAAEC,SAAS,EAAE;EACzC,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd;EACA,IAAIC,GAAG;;EAEP;EACA,IAAIF,SAAS,CAACG,UAAU,EAAE;IACxB,OAAO,EAAEF,KAAK,GAAGD,SAAS,CAACG,UAAU,CAACC,MAAM,EAAE;MAC5CN,SAAS,CAACC,IAAI,EAAEC,SAAS,CAACG,UAAU,CAACF,KAAK,CAAC,CAAC;IAC9C;EACF;EAEA,KAAKC,GAAG,IAAIF,SAAS,EAAE;IACrB,IAAIJ,GAAG,CAACS,IAAI,CAACL,SAAS,EAAEE,GAAG,CAAC,EAAE;MAC5B,QAAQA,GAAG;QACT,KAAK,YAAY;UAAE;YACjB;YACA;UACF;;QAEA;QACA,KAAK,QAAQ;UAAE;YACbI,IAAI,CAACP,IAAI,CAACG,GAAG,CAAC,EAAEF,SAAS,CAACE,GAAG,CAAC,CAAC;YAC/B;UACF;QAEA,KAAK,MAAM;UAAE;YACXI,IAAI,CAACP,IAAI,CAACG,GAAG,CAAC,EAAEF,SAAS,CAACE,GAAG,CAAC,CAAC;YAC/B;UACF;QAEA,KAAK,UAAU;UAAE;YACfK,GAAG,CAACR,IAAI,CAACG,GAAG,CAAC,EAAEF,SAAS,CAACE,GAAG,CAAC,CAAC;YAC9B;UACF;QAEA;UAAS;YACP;YACAH,IAAI,CAACS,OAAO,CAACN,GAAG,CAAC,GAAGF,SAAS,CAACE,GAAG,CAAC;UACpC;MACF;IACF;EACF;EAEA,OAAOH,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASO,IAAIA,CAACG,IAAI,EAAEC,KAAK,EAAE;EACzB,IAAIA,KAAK,EAAE;IACTD,IAAI,CAACE,IAAI,CAAC,GAAGD,KAAK,CAAC;EACrB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASH,GAAGA,CAACE,IAAI,EAAEC,KAAK,EAAE;EACxB,IAAIA,KAAK,EAAE;IACTE,MAAM,CAACC,MAAM,CAACJ,IAAI,EAAEC,KAAK,CAAC;EAC5B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}