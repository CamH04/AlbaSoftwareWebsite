{"ast":null,"code":"/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55295 && code < 57344 ||\n  // Noncharacters.\n  code > 64975 && code < 65008 || /* eslint-disable no-bitwise */\n  (code & 65535) === 65535 || (code & 65535) === 65534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1114111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","map":{"version":3,"names":["decodeNumericCharacterReference","value","base","code","Number","parseInt","String","fromCodePoint"],"sources":["/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/node_modules/micromark-util-decode-numeric-character-reference/index.js"],"sourcesContent":["/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,+BAA+BA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAC3D,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACJ,KAAK,EAAEC,IAAI,CAAC;EACzC;EACA;EACAC,IAAI,GAAG,CAAC,IAAIA,IAAI,KAAK,EAAE,IAAIA,IAAI,GAAG,EAAE,IAAIA,IAAI,GAAG,EAAE;EACjD;EACAA,IAAI,GAAG,GAAG,IAAIA,IAAI,GAAG,GAAG;EACxB;EACAA,IAAI,GAAG,KAAM,IAAIA,IAAI,GAAG,KAAM;EAC9B;EACAA,IAAI,GAAG,KAAM,IAAIA,IAAI,GAAG,KAAM,IAAI;EAClC,CAACA,IAAI,GAAG,KAAM,MAAM,KAAM,IAAI,CAACA,IAAI,GAAG,KAAM,MAAM,KAAM,IAAI;EAC5D;EACAA,IAAI,GAAG,OAAS,EAAE;IAChB,OAAO,QAAQ;EACjB;EACA,OAAOG,MAAM,CAACC,aAAa,CAACJ,IAAI,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}