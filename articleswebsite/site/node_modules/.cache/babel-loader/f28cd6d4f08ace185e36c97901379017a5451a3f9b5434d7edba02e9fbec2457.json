{"ast":null,"code":"var _jsxFileName = \"/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/src/components/MarkdownArticle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { remark } from 'remark';\nimport html from 'remark-html';\nimport fs from 'fs';\nimport path from 'path';\n\n// Function to fetch and render markdown files\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkdownArticle = ({\n  articlePath\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    // Read markdown file\n    const loadMarkdown = async () => {\n      try {\n        const markdownFile = path.join(__dirname, '../articles', articlePath);\n        const fileContent = fs.readFileSync(markdownFile, 'utf-8');\n        setContent(fileContent);\n      } catch (err) {\n        console.error('Error loading markdown file:', err);\n      }\n    };\n    loadMarkdown();\n  }, [articlePath]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"article-content\",\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MarkdownArticle, \"wipnac41BTB3eHT+ORLT1pgXER0=\");\n_c = MarkdownArticle;\nexport default MarkdownArticle;\nvar _c;\n$RefreshReg$(_c, \"MarkdownArticle\");","map":{"version":3,"names":["React","useEffect","useState","ReactMarkdown","remark","html","fs","path","jsxDEV","_jsxDEV","MarkdownArticle","articlePath","_s","content","setContent","loadMarkdown","markdownFile","join","__dirname","fileContent","readFileSync","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cameron/Desktop/AlbaSoftwareWebsite/articleswebsite/site/src/components/MarkdownArticle.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { remark } from 'remark';\nimport html from 'remark-html';\nimport fs from 'fs';\nimport path from 'path';\n\n// Function to fetch and render markdown files\nconst MarkdownArticle = ({ articlePath }) => {\n  const [content, setContent] = useState('');\n\n  useEffect(() => {\n    // Read markdown file\n    const loadMarkdown = async () => {\n      try {\n        const markdownFile = path.join(__dirname, '../articles', articlePath);\n        const fileContent = fs.readFileSync(markdownFile, 'utf-8');\n        setContent(fileContent);\n      } catch (err) {\n        console.error('Error loading markdown file:', err);\n      }\n    };\n\n    loadMarkdown();\n  }, [articlePath]);\n\n  return (\n    <div className=\"article-content\">\n      <ReactMarkdown children={content} />\n    </div>\n  );\n};\n\nexport default MarkdownArticle;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,EAAE,MAAM,IAAI;AACnB,OAAOC,IAAI,MAAM,MAAM;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,YAAY,GAAGT,IAAI,CAACU,IAAI,CAACC,SAAS,EAAE,aAAa,EAAEP,WAAW,CAAC;QACrE,MAAMQ,WAAW,GAAGb,EAAE,CAACc,YAAY,CAACJ,YAAY,EAAE,OAAO,CAAC;QAC1DF,UAAU,CAACK,WAAW,CAAC;MACzB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,GAAG,CAAC;MACpD;IACF,CAAC;IAEDN,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,oBACEF,OAAA;IAAKe,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BhB,OAAA,CAACN,aAAa;MAACsB,QAAQ,EAAEZ;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvBIF,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AAyBrB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}